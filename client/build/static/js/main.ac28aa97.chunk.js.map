{"version":3,"sources":["assets/img/anitest.gif","utils/auth.js","components/Header/index.js","pages/Home.js","pages/About.js","utils/queries.js","components/Sellz/index.js","pages/Tradez.js","utils/mutations.js","pages/Users.js","pages/Login.js","pages/Register.js","components/Main/index.js","App.js","index.js"],"names":["decode","this","getToken","token","isTokenExpired","exp","Date","now","err","localStorage","getItem","idToken","setItem","window","location","assign","removeItem","Header","props","Auth","loggedIn","tabs","className","id","href","map","tab","toLowerCase","onClick","handlePageChange","currentPage","event","preventDefault","logout","Home","src","require","default","About","QUERY_ALL_PRODUCTS","gql","SellList","products","title","length","sell","name","Tradez","useQuery","loading","data","LOGIN","ADD_USER","ADD_PRODUCT","Users","useState","email","password","useMutation","htmlFor","placeholder","type","Login","formState","setFormState","login","error","handleFormSubmit","a","variables","mutationResponse","console","log","handleChange","target","value","onSubmit","onChange","Register","addUser","firstName","lastName","Main","renderPage","httpLink","createHttpLink","uri","authLink","setContext","_","headers","authorization","client","ApolloClient","link","concat","cache","InMemoryCache","App","ApolloProvider","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ac28aa97.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/anitest.bd1e0730.gif\";","import decode from \"jwt-decode\";\n\nclass AuthService {\n  getProfile() {\n    return decode(this.getToken());\n  }\n\n  loggedIn() {\n    const token = this.getToken();\n    return !!token && !this.isTokenExpired(token);\n  }\n\n  isTokenExpired(token) {\n    try {\n      const decoded = decode(token);\n      if (decoded.exp < Date.now() / 1000) {\n        return true;\n      } else return false;\n    } catch (err) {\n      return false;\n    }\n  }\n\n  getToken() {\n    return localStorage.getItem(\"id_token\");\n  }\n\n  login(idToken) {\n    localStorage.setItem(\"id_token\", idToken);\n\n    window.location.assign(\"/\");\n  }\n\n  logout() {\n    localStorage.removeItem(\"id_token\");\n\n    window.location.assign(\"/\");\n  }\n}\n\nexport default new AuthService();\n","import React from 'react';\nimport Auth from '../../utils/auth';\n\nfunction Header(props) {\n  // const tabs = ['About', 'Tradez', 'Users', 'Login', 'Register'];\n  const logout = event => {\n    event.preventDefault();\n    Auth.logout();\n  };\n  if (!Auth.loggedIn() ) {\n    var tabs = ['About', 'Tradez', 'Users', 'Login', 'Register'];\n  } else {\n    var tabs = ['About', 'Tradez', 'Users'];\n  }\n  \n  return (\n    <ul className=\"flex-row\" id=\"header\">\n      <h2>\n        <a id=\"pagename\" data-testid=\"link\" href=\"/\">\n          Gametradez\n        </a>\n      </h2>\n      <div id=\"navi\">\n      {tabs.map(tab => (\n        <li className=\"mx-1\" key={tab}>\n          <a\n            href={'#' + tab.toLowerCase()}\n            // Whenever a tab is clicked on,\n            // the current page is set through the handlePageChange props.\n            onClick={() => props.handlePageChange(tab)}\n            className={\n              props.currentPage === tab ? 'nav-link active' : 'nav-link'\n            }\n          >\n            {tab}\n          </a>\n        </li>\n      ))}\n        {Auth.loggedIn()\n          ? <a href=\"/\" onClick={logout} id=\"logoutlink\">Logout</a>\n          : <a></a>    \n        }\n      </div>\n    </ul>\n  );\n}\n\nexport default Header;\n","import React from \"react\";\n\n//<img src={require('../../assets/img/jtw.jpg').default}/>\nconst Home = () => {\n  return (\n    <div>\n        <img src={require('../assets/img/anitest.gif').default}/>\n    </div>\n  );\n};\n\nexport default Home;\n","import React from \"react\";\n\nconst About = () => {\n  return (\n    <div>\n        <p id=\"maintext\">\n        An online game and game asset trading\n         site.  \n        A fast easy to use, mobile friendly\n         place to post your game stuff for 'sellz'.\n        </p>\n    </div>\n  );\n};\n\nexport default About;","import { gql } from \"@apollo/client\";\n\nexport const QUERY_ALL_PRODUCTS = gql`\n  {\n    products {\n      productTitle\n      productDescription\n      price\n      quantity\n    }\n  }\n`;\n\n//add posts to users **not mvp will work later**\n\n// export const QUERY_USER = gql`\n//   {\n//     user {\n//       firstName\n//       lastName\n//       orders {\n//         _id\n\n//         products {\n//           _id\n//           name\n//           description\n//           price\n//           quantity\n//           image\n//         }\n//       }\n//     }\n//   }\n// `;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst SellList = ({ products, title }) => {\n  if (!products.length) {\n    return <h3>Nothing For Sale Yet WIP</h3>;\n  }\n\n  return (\n    <div>\n      <h3>{title}</h3>\n      {products &&\n        products.map(sell => (\n          // <div key={sell._id} className=\"card mb-3\">\n          //   <p className=\"card-header\">\n          //     <Link\n          //       to={`/profile/${sell.name}`}\n          //       style={{ fontWeight: 700 }}\n          //       className=\"text-light\"\n          //     >\n          //       {sell.name}\n          //     </Link>{' '}\n          //     sell on {sell.price}\n          //   </p>\n          //   <div className=\"card-body\">\n          //     <Link to={`/sell/${sell._id}`}>\n          //       <p>{sell.description}</p>\n          //     </Link>\n          //   </div>\n          // </div>\n\n          <p>{sell.name}</p>\n\n        ))}\n    </div>\n  );\n};\n\nexport default SellList;","import React from \"react\";\nimport { useQuery } from '@apollo/client';\nimport { QUERY_ALL_PRODUCTS  } from '../utils/queries';\nimport SellList from '../components/Sellz';\n\nconst Tradez = () => {\n  const { loading, data } = useQuery(QUERY_ALL_PRODUCTS);\n  const products = data?.products || [];\n  return (\n    <div>\n        <p id=\"maintext\">Tradez</p>\n        <div>\n          {loading ? (\n            <div>Loading...</div>\n          ) : (\n            <SellList products={products} title=\"Game(z) stuff for sale...\" />\n          )}\n        </div>\n    </div>\n  );\n};\n\nexport default Tradez;","import { gql } from \"@apollo/client\";\n\nexport const LOGIN = gql`\n  mutation login($email: String!, $password: String!) {\n    login(email: $email, password: $password) {\n      token\n      user {\n        _id\n      }\n    }\n  }\n`;\n\nexport const ADD_USER = gql`\n  mutation addUser(\n    $firstName: String!\n    $lastName: String!\n    $email: String!\n    $password: String!\n  ) {\n    addUser(\n      firstName: $firstName\n      lastName: $lastName\n      email: $email\n      password: $password\n    ) {\n      token\n      user {\n        _id\n      }\n    }\n  }\n`;\n\nexport const ADD_PRODUCT = gql`\n  mutation addProduct(\n    $productTitle: String!\n    $productDescription: String!\n    $price: Int!\n    $quantity: Int!\n  ) {\n    addProduct(\n      productTitle: $productTitle\n      productDescription: $productDescription\n      price: $price\n      quantity: $quantity\n    )\n  }\n`;\n","import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useMutation } from \"@apollo/client\";\nimport Auth from \"../utils/auth\";\nimport { ADD_PRODUCT } from \"../utils/mutations\";\n\nfunction Users(props) {\n  const [formState, setFormState] = useState({ email: \"\", password: \"\" });\n  const [addProduct] = useMutation(ADD_PRODUCT);\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n    await addProduct({\n      variable: {\n        productTitle: formState.productTitle,\n        price: formState.price,\n        quantity: formState.quantity,\n        productDescription: formState.productDescription,\n      },\n    });\n    console.log(formState.productTitle);\n  };\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n    setFormState({\n      ...formState,\n      [name]: value,\n    });\n  };\n\n  return (\n    <div>\n      <p id=\"maintext\">Users</p>\n\n      <div className=\"container my-1\">\n        <form className=\"register-container\">\n          {/* <form onSubmit={handleFormSubmit} className=\"register-container\"> */}\n          <div className=\"flex-row space-between my-2\">\n            <label htmlFor=\"\">Title:</label>\n            <input\n              placeholder=\"Title\"\n              name=\"productTitle\"\n              type=\"productTitle\"\n              id=\"productTitle\"\n              // onChange={handleChange}\n            />\n          </div>\n          <div className=\"flex-row space-between my-2\">\n            <label htmlFor=\"price\">Price:</label>\n            <input placeholder=\"$1.00\" name=\"price\" type=\"price\" id=\"price\" />\n          </div>\n          <div className=\"flex-row space-between my-2\">\n            <label htmlFor=\"quantity\">Quantity:</label>\n            <input\n              placeholder=\"1\"\n              name=\"quantity\"\n              type=\"quantity\"\n              id=\"quantity\"\n              // onChange={handleChange}\n            />\n          </div>\n          <div className=\"flex-row space-between my-2\">\n            <label htmlFor=\"productDescription\">Description:</label>\n            <textarea\n              placeholder=\"This is my product description\"\n              name=\"productDescription\"\n              type=\"productDescription\"\n              id=\"productDescription\"\n              // onChange={handleChange}\n            />\n          </div>\n          <div className=\"flex-row flex-end\">\n            <button type=\"submit\">Submit</button>\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n}\n\nexport default Users;\n","import React, { useState } from \"react\";\nimport { useMutation } from \"@apollo/client\";\nimport { Link } from \"react-router-dom\";\nimport { LOGIN } from \"../utils/mutations\";\nimport Auth from \"../utils/auth\";\n\nfunction Login(props) {\n  const [formState, setFormState] = useState({ email: \"\", password: \"\" });\n  const [login, { error }] = useMutation(LOGIN);\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n    try {\n      const mutationResponse = await login({\n        variables: { email: formState.email, password: formState.password },\n      });\n      const token = mutationResponse.data.login.token;\n      Auth.login(token);\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n    setFormState({\n      ...formState,\n      [name]: value,\n    });\n  };\n\n  return (\n    <div className=\"container my-1 register-login-page\">\n\n      <h2>Login</h2>\n      <form onSubmit={handleFormSubmit} className=\"login-container\">\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"email\">Email address:</label>\n          <input\n            placeholder=\"youremail@test.com\"\n            name=\"email\"\n            type=\"email\"\n            id=\"email\"\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"pwd\">Password:</label>\n          <input\n            placeholder=\"******\"\n            name=\"password\"\n            type=\"password\"\n            id=\"pwd\"\n            onChange={handleChange}\n          />\n        </div>\n        {error ? (\n          <div>\n            <p className=\"error-text\">The provided credentials are incorrect</p>\n          </div>\n        ) : null}\n        <div className=\"flex-row flex-end\">\n          <button type=\"submit\">Submit</button>\n        </div>\n      </form>\n    </div>\n  );\n}\n\nexport default Login;\n","import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useMutation } from \"@apollo/client\";\nimport Auth from \"../utils/auth\";\nimport { ADD_USER } from \"../utils/mutations\";\n\nfunction Register(props) {\n  const [formState, setFormState] = useState({ email: \"\", password: \"\" });\n  const [addUser] = useMutation(ADD_USER);\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n    const mutationResponse = await addUser({\n      variables: {\n        email: formState.email,\n        password: formState.password,\n        firstName: formState.firstName,\n        lastName: formState.lastName,\n      },\n    });\n    const token = mutationResponse.data.addUser.token;\n    Auth.login(token);\n  };\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n    setFormState({\n      ...formState,\n      [name]: value,\n    });\n  };\n\n  return (\n    <div className=\"container my-1 register-login-page\">\n\n      <h2>Register</h2>\n\n      <form onSubmit={handleFormSubmit} className=\"register-container\">\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"firstName\">First Name:</label>\n          <input\n            placeholder=\"First\"\n            name=\"firstName\"\n            type=\"firstName\"\n            id=\"firstName\"\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"lastName\">Last Name:</label>\n          <input\n            placeholder=\"Last\"\n            name=\"lastName\"\n            type=\"lastName\"\n            id=\"lastName\"\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"email\">Email:</label>\n          <input\n            placeholder=\"youremail@test.com\"\n            name=\"email\"\n            type=\"email\"\n            id=\"email\"\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"pwd\">Password:</label>\n          <input\n            placeholder=\"******\"\n            name=\"password\"\n            type=\"password\"\n            id=\"pwd\"\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"flex-row flex-end\">\n          <button type=\"submit\">Submit</button>\n        </div>\n      </form>\n    </div>\n  );\n}\n\nexport default Register;\n","import React, { useState } from \"react\";\nimport Header from \"../Header\";\nimport Home from \"../../pages/Home\";\nimport About from \"../../pages/About\";\nimport Tradez from \"../../pages/Tradez\";\nimport Users from \"../../pages/Users\";\nimport Login from \"../../pages/Login\";\nimport Register from \"../../pages/Register\";\n\nfunction Main() {\n  // Using useState, set the default value for currentPage to 'Home'\n  const [currentPage, handlePageChange] = useState(\"Home\");\n\n  // The renderPage method uses a switch statement to render the appropriate current page\n  const renderPage = () => {\n    switch (currentPage) {\n      case \"About\":\n        return <About />;\n      case \"Tradez\":\n        return <Tradez />;\n      case \"Users\":\n        return <Users />;\n      case \"Login\":\n        return <Login />;\n      case \"Register\":\n        return <Register />;\n      case \"Logout\":\n        return <Home />;\n      default:\n        return <Home />;\n    }\n  };\n\n  return (\n    <div>\n      {/* Pass the state value and the setter as props to Header */}\n      <div className=\"hoverWrapper\">\n        <div className=\"arrow-container\">\n          <div className=\"arrow\"></div>\n          <div className=\"arrow\"></div>\n          <div className=\"arrow\"></div>\n        </div>\n        <div id=\"hoverShow1\">\n          <Header\n            currentPage={currentPage}\n            handlePageChange={handlePageChange}\n          />\n        </div>\n      </div>\n      {/* Call the renderPage function passing in the currentPage */}\n      <div id=\"mainWindow\">{renderPage(currentPage)}</div>\n    </div>\n  );\n}\n\nexport default Main;\n","import \"./App.css\";\nimport React from \"react\";\nimport Main from \"./components/Main\";\nimport { BrowserRouter as Router, Link } from \"react-router-dom\";\nimport {\n  ApolloClient,\n  InMemoryCache,\n  ApolloProvider,\n  createHttpLink,\n} from \"@apollo/client\";\n\nimport { setContext } from \"@apollo/client/link/context\";\n\nconst httpLink = createHttpLink({\n  uri: \"/graphql\",\n});\n\nconst authLink = setContext((_, { headers }) => {\n  const token = localStorage.getItem(\"id_token\");\n  return {\n    headers: {\n      ...headers,\n      authorization: token ? `Bearer ${token}` : \"\",\n    },\n  };\n});\n\nconst client = new ApolloClient({\n  link: authLink.concat(httpLink),\n  cache: new InMemoryCache(),\n});\n\n////////\n\n///////\n//Route, Switch\nfunction App() {\n  return (\n    <ApolloProvider client={client}>\n      <Router>\n        <div className=\"App\">\n          <Main></Main>\n        </div>\n      </Router>\n    </ApolloProvider>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}