{"version":3,"sources":["utils/auth.js","components/Header/index.js","pages/Home.js","pages/About.js","utils/queries.js","components/Sellz/index.js","pages/Tradez.js","utils/mutations.js","pages/Users.js","pages/Login.js","pages/Register.js","components/Main/index.js","App.js","index.js","assets/img/gametradez.gif"],"names":["decode","this","getToken","token","isTokenExpired","exp","Date","now","err","localStorage","getItem","idToken","setItem","window","location","assign","removeItem","Header","props","Auth","loggedIn","tabs","className","id","href","map","tab","toLowerCase","onClick","handlePageChange","currentPage","event","preventDefault","logout","Home","class","src","require","default","About","QUERY_ALL_PRODUCTS","gql","SellList","products","title","itemData","img","description","link","ImageList","sx","width","height","item","ImageListItem","target","srcSet","alt","loading","git","ImageListItemBar","subtitle","actionIcon","IconButton","color","price","Tradez","useQuery","data","console","log","LOGIN","ADD_USER","ADD_PRODUCT","Users","useState","productz","setText","useMutation","update","cache","addProduct","readQuery","query","writeQuery","e","error","handleChange","value","length","handleFormSubmit","a","variables","style","backgroundImage","background","onSubmit","htmlFor","placeholder","name","type","onChange","Login","email","password","formState","setFormState","login","mutationResponse","Register","addUser","firstName","lastName","Main","renderPage","httpLink","createHttpLink","uri","authLink","setContext","_","headers","authorization","client","ApolloClient","concat","InMemoryCache","App","ApolloProvider","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.37b29bd3.chunk.js","sourcesContent":["import decode from \"jwt-decode\";\n\nclass AuthService {\n  getProfile() {\n    return decode(this.getToken());\n  }\n\n  loggedIn() {\n    const token = this.getToken();\n    return !!token && !this.isTokenExpired(token);\n  }\n\n  isTokenExpired(token) {\n    try {\n      const decoded = decode(token);\n      if (decoded.exp < Date.now() / 1000) {\n        return true;\n      } else return false;\n    } catch (err) {\n      return false;\n    }\n  }\n\n  getToken() {\n    return localStorage.getItem(\"id_token\");\n  }\n\n  login(idToken) {\n    localStorage.setItem(\"id_token\", idToken);\n\n    window.location.assign(\"/\");\n  }\n\n  logout() {\n    localStorage.removeItem(\"id_token\");\n\n    window.location.assign(\"/\");\n  }\n}\n\nexport default new AuthService();\n","import React from 'react';\nimport Auth from '../../utils/auth';\n\nfunction Header(props) {\n  // const tabs = ['About', 'Tradez', 'Users', 'Login', 'Register'];\n  const logout = event => {\n    event.preventDefault();\n    Auth.logout();\n  };\n  if (!Auth.loggedIn() ) {\n    var tabs = ['About', 'Tradez', 'Post', 'Login', 'Register'];\n  } else {\n    var tabs = ['About', 'Tradez', 'Post'];\n  }\n  \n  return (\n    <ul className=\"flex-row\" id=\"header\">\n      <h2>\n        <a id=\"pagename\" data-testid=\"link\" href=\"/\">\n          Gametradez\n        </a>\n      </h2>\n      <div id=\"navi\">\n      {tabs.map(tab => (\n        <li className=\"mx-1\" key={tab}>\n          <a\n            href={'#' + tab.toLowerCase()}\n            // Whenever a tab is clicked on,\n            // the current page is set through the handlePageChange props.\n            onClick={() => props.handlePageChange(tab)}\n            className={\n              props.currentPage === tab ? 'nav-link active' : 'nav-link'\n            }\n          >\n            {tab}\n          </a>\n        </li>\n      ))}\n        {Auth.loggedIn()\n          ? <a href=\"/\" onClick={logout} id=\"logoutlink\">Logout</a>\n          : <a></a>    \n        }\n      </div>\n    </ul>\n  );\n}\n\nexport default Header;","import React from \"react\";\n\n//<img src={require('../../assets/img/jtw.jpg').default}/>\nconst Home = () => {\n  return (\n    <div class=\"jumbotron\">\n      <img src={require('../assets/img/gametradez.gif').default}/>\n      <div class=\"centered\">GameTradez!</div>\n    </div>\n  );\n};\n\nexport default Home;","import React from \"react\";\n\nconst About = () => {\n  return (\n    <div>\n        <p id=\"maintext\">\n       Gametradez was built on the idea of providing a safe and secure way to buy and sell anything video game related. ~{\"\\n\"}  \n       Gamerz can create user profiles, purchase and post their merchendise. Once a purchase has been initiated Gametradez will act as a broker, ~{\"\\n\"}\n       and confirm the buyer is getting what was posted for sale, once authenticated by Gametradez, the funds are released to the seller.   \n        </p>\n    </div>\n  );\n};\n\nexport default About;","import { gql } from \"@apollo/client\";\n\nexport const QUERY_ALL_PRODUCTS = gql`\n  {\n    products {\n      productTitle\n      productDescription\n      price\n      quantity\n    }\n  }\n`;\n\n//add posts to users **not mvp will work later**\n\n// export const QUERY_USER = gql`\n//   {\n//     user {\n//       firstName\n//       lastName\n//       orders {\n//         _id\n\n//         products {\n//           _id\n//           name\n//           description\n//           price\n//           quantity\n//           image\n//         }\n//       }\n//     }\n//   }\n// `;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport ImageList from '@mui/material/ImageList';\nimport ImageListItem from '@mui/material/ImageListItem';\nimport ImageListItemBar from '@mui/material/ImageListItemBar';\nimport IconButton from '@mui/material/IconButton';\nimport AddShoppingCartIcon from '@mui/icons-material/AddShoppingCart';\n// import Link from '@mui/material/Link';\n\nconst SellList = ({ products, title }) => {\n  const itemData = [\n    {\n      img: 'https://upload.wikimedia.org/wikipedia/en/c/c1/Dkc_snes_boxart.jpg',\n      title: 'Donkey Kong Country',\n      description: 'SNES, USED, With Box',\n      link: 'https://en.wikipedia.org/wiki/Donkey_Kong_Country',\n      link: 'https://en.wikipedia.org/wiki/Donkey_Kong_Country',\n      price: 15,\n      rows: 2,\n      cols: 2,\n    },\n    {\n      img: 'https://upload.wikimedia.org/wikipedia/en/thumb/a/ac/Ffl_boxfront.jpg/220px-Ffl_boxfront.jpg',\n      title: 'Final Fantasy Legend',\n      description: 'GAMEBOY, NEW, With Box',\n      link: 'https://finalfantasy.fandom.com/wiki/The_Final_Fantasy_Legend',\n      link: 'https://finalfantasy.fandom.com/wiki/The_Final_Fantasy_Legend',\n      price: 10,\n    },\n    {\n      img: 'https://iheartoldgames.files.wordpress.com/2018/01/half-life.jpg',\n      title: 'Half-Life',\n      description: 'PC, NEW, With Box and Key',\n      link: 'https://half-life.fandom.com/wiki/Half-Life',\n      link: 'https://half-life.fandom.com/wiki/Half-Life',\n      price: 5,\n    },\n    {\n      img: 'https://scholarlykitchen.sspnet.org/wp-content/uploads/2021/03/NF-RGB_APNG-Logo-300x300.png',\n      title: 'Fortnite Blue Cape NFT',\n      description: 'NFT for blue cap, Fortnite',\n      link: 'https://en.wikipedia.org/wiki/Bluecoat',\n      link: 'https://en.wikipedia.org/wiki/Bluecoat',\n      price: 999,\n    },\n    {\n      img: 'https://upload.wikimedia.org/wikipedia/en/0/03/Super_Mario_Bros._box.png',\n      title: 'Super Mario Bros',\n      description: 'NES, USED, Without Box',\n      link: 'https://en.wikipedia.org/wiki/Super_Mario_Bros.',\n      link: 'https://en.wikipedia.org/wiki/Super_Mario_Bros.',\n      price: 25,\n    },\n    {\n      img: 'https://upload.wikimedia.org/wikipedia/en/4/41/Legend_of_zelda_cover_%28with_cartridge%29_gold.png',\n      title: 'The Legend of Zelda',\n      description: 'NES, USED, Without Box',\n      link: 'https://en.wikipedia.org/wiki/The_Legend_of_Zelda_(video_game)',\n      link: 'https://en.wikipedia.org/wiki/The_Legend_of_Zelda_(video_game)',\n      price: 12,\n    },\n\n  ];\n\n\n\n  return (\n    <div>\n    <h1>See whatz for sell here!</h1>\n    <div className=\"flex-row\">\n    <ImageList sx={{ width: 1000, height: 1000 }}>\n      {itemData.map((item) => (\n        <ImageListItem key={item.img}>\n          <a href={item.link} target=\"_blank\">\n          <img\n            src={`${item.img}?w=248&fit=crop&auto=format`}\n            srcSet={`${item.img}?w=248&fit=crop&auto=format&dpr=2 2x`}\n            alt={item.title}\n            loading=\"lazy\"\n          />\n          </a>\n          <a href={item.git}>\n          <ImageListItemBar\n            title={item.title}\n            subtitle={item.description}\n            actionIcon={\n              \n              <IconButton\n                sx={{ color: 'rgba(255, 255, 255, 0.54)' }}\n                aria-label={`info about ${item.title}`}\n              >\n                ${item.price}\n                <AddShoppingCartIcon />\n              </IconButton>\n              \n            }\n          />\n          </a>\n        </ImageListItem>\n      ))}\n    </ImageList>\n    </div>\n  </div>\n  );\n};\n\nexport default SellList;\n","import React from \"react\";\nimport { useQuery } from '@apollo/client';\nimport { QUERY_ALL_PRODUCTS  } from '../utils/queries';\nimport SellList from '../components/Sellz';\n\nconst Tradez = () => {\n  const { loading, data } = useQuery(QUERY_ALL_PRODUCTS);\n  const products = data?.products || [];\n  console.log(products)\n  return (\n    <div>\n        <p id=\"maintext\"></p>\n        <div>\n          {loading ? (\n            <div>Loading...</div>\n          ) : (\n            // <SellList products={products} title=\"Game(z) stuff for sale...\" />\n            <SellList></SellList>\n          )}\n        </div>\n    </div>\n  );\n};\n\nexport default Tradez;","import { gql } from \"@apollo/client\";\n\nexport const LOGIN = gql`\n  mutation login($email: String!, $password: String!) {\n    login(email: $email, password: $password) {\n      token\n      user {\n        _id\n      }\n    }\n  }\n`;\n\nexport const ADD_USER = gql`\n  mutation addUser(\n    $firstName: String!\n    $lastName: String!\n    $email: String!\n    $password: String!\n  ) {\n    addUser(\n      firstName: $firstName\n      lastName: $lastName\n      email: $email\n      password: $password\n    ) {\n      token\n      user {\n        _id\n      }\n    }\n  }\n`;\n\nexport const ADD_PRODUCT = gql`\n  mutation addProduct(\n    $productTitle: String!\n    $productDescription: String!\n    $price: Int!\n    $quantity: Int!\n  ) {\n    addProduct(\n      productTitle: $productTitle\n      productDescription: $productDescription\n      price: $price\n      quantity: $quantity\n    )\n  }\n`;\n","import React, { useState } from \"react\";\n// import { Link } from \"react-router-dom\";\nimport { useMutation } from \"@apollo/client\";\n// import Auth from \"../utils/auth\";\nimport { ADD_PRODUCT } from \"../utils/mutations\";\nimport { QUERY_ALL_PRODUCTS } from \"../utils/queries\";\nimport background from \"../assets/img/gametradez.gif\";\n\nfunction Users(props) {\n  const [productz, setText] = useState('');\n  // const [productzCount, setCharacterCount] = useState(0);\n  const [addProduct, { error }] = useMutation(ADD_PRODUCT, {\n    update(cache, { data: { addProduct } }) {\n      try {\n        // could potentially not exist yet, so wrap in a try...catch\n        const { products } = cache.readQuery({ query: QUERY_ALL_PRODUCTS });\n        cache.writeQuery({\n          query: QUERY_ALL_PRODUCTS,\n          data: { products: [addProduct, ...products] }\n        });\n      } catch (e) {\n        console.error(e);\n      }\n    }\n  });\n\n  const handleChange = event => {\n    if (event.target.value.length <= 280) {\n      setText(event.target.value);\n      // setCharacterCount(event.target.value.length);\n    }\n  };\n\n  const handleFormSubmit = async event => {\n    event.preventDefault();\n  \n    try {\n      // add thought to database\n      await addProduct({\n        variables: { productz }\n      });\n  \n      // clear form value\n      setText('');\n      // setCharacterCount(0);\n    } catch (e) {\n      console.error(e);\n    }\n  };\n\n\n  return (\n    <div style={{ backgroundImage: `url(${background})` }}>\n      <p id=\"maintext\">Post You Stuff for Sale Here!</p>\n\n      <div className=\"container my-1\">\n          <form onSubmit={handleFormSubmit} className=\"register-container\">\n          <div className=\"flex-row space-between my-2\">\n            <label htmlFor=\"\">Title:</label>\n            <input\n              placeholder=\"Title\"\n              name=\"productTitle\"\n              type=\"productTitle\"\n              id=\"productTitle\"\n              onChange={handleChange}\n            />\n          </div>\n          <div className=\"flex-row space-between my-2\">\n            <label htmlFor=\"price\">Price:</label>\n            <input placeholder=\"$1.00\" name=\"price\" type=\"price\" id=\"price\" />\n          </div>\n          <div className=\"flex-row space-between my-2\">\n            <label htmlFor=\"quantity\">Quantity:</label>\n            <input\n              placeholder=\"1\"\n              name=\"quantity\"\n              type=\"quantity\"\n              id=\"quantity\"\n              onChange={handleChange}\n            />\n          </div>\n          <div className=\"flex-row space-between my-2\">\n            <label htmlFor=\"productDescription\">Description:</label>\n            <textarea\n              placeholder=\"This is my product description\"\n              name=\"productDescription\"\n              type=\"productDescription\"\n              id=\"productDescription\"\n              onChange={handleChange}\n            />\n          </div>\n          <div className=\"flex-row flex-end\">\n            <button type=\"submit\">Submit</button>\n          </div>\n        </form>\n        </div>\n    </div>\n  );\n}\n\nexport default Users;","import React, { useState } from \"react\";\nimport { useMutation } from \"@apollo/client\";\n// import { Link } from \"react-router-dom\";\nimport { LOGIN } from \"../utils/mutations\";\nimport Auth from \"../utils/auth\";\nimport background from \"../assets/img/gametradez.gif\";\n\nfunction Login(props) {\n  const [formState, setFormState] = useState({ email: \"\", password: \"\" });\n  const [login, { error }] = useMutation(LOGIN);\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n    try {\n      const mutationResponse = await login({\n        variables: { email: formState.email, password: formState.password },\n      });\n      const token = mutationResponse.data.login.token;\n      Auth.login(token);\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n    setFormState({\n      ...formState,\n      [name]: value,\n    });\n  };\n\n  return (\n    <div className=\"container my-1 register-login-page\" style={{ backgroundImage: `url(${background})` }}>\n\n      <h2>Login</h2>\n      <form onSubmit={handleFormSubmit} className=\"login-container\">\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"email\">Email address:</label>\n          <input\n            placeholder=\"youremail@test.com\"\n            name=\"email\"\n            type=\"email\"\n            id=\"email\"\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"pwd\">Password:</label>\n          <input\n            placeholder=\"******\"\n            name=\"password\"\n            type=\"password\"\n            id=\"pwd\"\n            onChange={handleChange}\n          />\n        </div>\n        {error ? (\n          <div>\n            <p className=\"error-text\">The provided credentials are incorrect</p>\n          </div>\n        ) : null}\n        <div className=\"flex-row flex-end\">\n          <button type=\"submit\">Submit</button>\n        </div>\n      </form>\n    </div>\n  );\n}\n\nexport default Login;","import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useMutation } from \"@apollo/client\";\nimport Auth from \"../utils/auth\";\nimport { ADD_USER } from \"../utils/mutations\";\nimport background from \"../assets/img/gametradez.gif\";\n\nfunction Register(props) {\n  const [formState, setFormState] = useState({ email: \"\", password: \"\" });\n  const [addUser] = useMutation(ADD_USER);\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n    const mutationResponse = await addUser({\n      variables: {\n        email: formState.email,\n        password: formState.password,\n        firstName: formState.firstName,\n        lastName: formState.lastName,\n      },\n    });\n    const token = mutationResponse.data.addUser.token;\n    Auth.login(token);\n  };\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n    setFormState({\n      ...formState,\n      [name]: value,\n    });\n  };\n\n  return (\n    <div className=\"container my-1 register-login-page\" style={{ backgroundImage: `url(${background})` }}>\n\n      <h2>Register</h2>\n\n      <form onSubmit={handleFormSubmit} className=\"register-container\">\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"firstName\">First Name:</label>\n          <input\n            placeholder=\"First\"\n            name=\"firstName\"\n            type=\"firstName\"\n            id=\"firstName\"\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"lastName\">Last Name:</label>\n          <input\n            placeholder=\"Last\"\n            name=\"lastName\"\n            type=\"lastName\"\n            id=\"lastName\"\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"email\">Email:</label>\n          <input\n            placeholder=\"youremail@test.com\"\n            name=\"email\"\n            type=\"email\"\n            id=\"email\"\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"pwd\">Password:</label>\n          <input\n            placeholder=\"******\"\n            name=\"password\"\n            type=\"password\"\n            id=\"pwd\"\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"flex-row flex-end\">\n          <button type=\"submit\">Submit</button>\n        </div>\n      </form>\n    </div>\n  );\n}\n\nexport default Register;","import React, { useState } from \"react\";\nimport Header from \"../Header\";\nimport Home from \"../../pages/Home\";\nimport About from \"../../pages/About\";\nimport Tradez from \"../../pages/Tradez\";\nimport Users from \"../../pages/Users\";\nimport Login from \"../../pages/Login\";\nimport Register from \"../../pages/Register\";\n\nfunction Main() {\n  // Using useState, set the default value for currentPage to 'Home'\n  const [currentPage, handlePageChange] = useState(\"Home\");\n\n  // The renderPage method uses a switch statement to render the appropriate current page\n  const renderPage = () => {\n    switch (currentPage) {\n      case \"About\":\n        return <About />;\n      case \"Tradez\":\n        return <Tradez />;\n      case \"Post\":\n        return <Users />;\n      case \"Login\":\n        return <Login />;\n      case \"Register\":\n        return <Register />;\n      case \"Logout\":\n        return <Home />;\n      default:\n        return <Home />;\n    }\n  };\n\n  return (\n    <div>\n      {/* Pass the state value and the setter as props to Header */}\n      <div className=\"hoverWrapper\">\n        <div className=\"arrow-container\">\n          <div className=\"arrow\"></div>\n          <div className=\"arrow\"></div>\n          <div className=\"arrow\"></div>\n        </div>\n        <div id=\"hoverShow1\">\n          <Header\n            currentPage={currentPage}\n            handlePageChange={handlePageChange}\n          />\n        </div>\n      </div>\n      {/* Call the renderPage function passing in the currentPage */}\n      <div id=\"mainWindow\">{renderPage(currentPage)}</div>\n    </div>\n  );\n}\n\nexport default Main;","import \"./App.css\";\nimport React from \"react\";\nimport Main from \"./components/Main\";\nimport { BrowserRouter as Router, Link } from \"react-router-dom\";\nimport {\n  ApolloClient,\n  InMemoryCache,\n  ApolloProvider,\n  createHttpLink,\n} from \"@apollo/client\";\n\nimport { setContext } from \"@apollo/client/link/context\";\n\nconst httpLink = createHttpLink({\n  uri: \"/graphql\",\n});\n\nconst authLink = setContext((_, { headers }) => {\n  const token = localStorage.getItem(\"id_token\");\n  return {\n    headers: {\n      ...headers,\n      authorization: token ? `Bearer ${token}` : \"\",\n    },\n  };\n});\n\nconst client = new ApolloClient({\n  link: authLink.concat(httpLink),\n  cache: new InMemoryCache(),\n});\n\n////////\n\n///////\n//Route, Switch\nfunction App() {\n  return (\n    <ApolloProvider client={client}>\n      <Router>\n        <div className=\"App\">\n          <Main></Main>\n        </div>\n      </Router>\n    </ApolloProvider>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n","export default __webpack_public_path__ + \"static/media/gametradez.5caf0c24.gif\";"],"sourceRoot":""}